-- MySQL Script generated by MySQL Workbench
-- Tue Oct 29 22:50:18 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema user-main-app
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema user-main-app
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `user-main-app` DEFAULT CHARACTER SET utf8 ;
USE `user-main-app` ;

-- -----------------------------------------------------
-- Table `user-main-app`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `user-main-app`.`User` (
  `ID` INT NOT NULL,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NULL,
  `email` TEXT NOT NULL,
  `linkedin` TEXT NULL,
  `github` TEXT NULL,
  `twitter` TEXT NULL,
  `joined_timestamp` DATETIME NOT NULL,
  `bio` TEXT NULL,
  `phone_number` VARCHAR(45) NOT NULL,
  `display_name` VARCHAR(45) NULL,
  `setting_light_or_dark` VARCHAR(45) NULL,
  `setting_private_or_public` VARCHAR(45) NULL,
  `role_investor` TINYINT NOT NULL,
  `role_contributor` TINYINT NOT NULL,
  `role_founder` TINYINT NOT NULL,
  `legacy_score` INT NOT NULL,
  `setting_verified` TINYINT NOT NULL,
  `verification_expiration` DATETIME NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `user-main-app`.`Project`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `user-main-app`.`Project` (
  `ID` INT NOT NULL,
  `name` INT NOT NULL,
  `logo` BLOB NULL,
  `description` TEXT NULL,
  `post_date` DATETIME NOT NULL,
  `business_plan` BLOB NULL,
  `video_link` TEXT NOT NULL,
  `score_metric` DECIMAL(2) NOT NULL,
  `minimum_investment` DECIMAL(2) NULL,
  `setting_open_or_closed_forinvestment` TINYINT NOT NULL,
  `status` VARCHAR(45) NOT NULL,
  `category` VARCHAR(45) NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `user-main-app`.`User_has_Projects_ownedby_Users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `user-main-app`.`User_has_Projects_ownedby_Users` (
  `Project_ID` INT NOT NULL,
  `User_ID` INT NOT NULL,
  `owned_timestamp` DATETIME NULL,
  PRIMARY KEY (`Project_ID`, `User_ID`),
  INDEX `fk_Project_has_User_User1_idx` (`User_ID` ASC) ,
  INDEX `fk_Project_has_User_Project_idx` (`Project_ID` ASC) ,
  CONSTRAINT `fk_Project_has_User_Project`
    FOREIGN KEY (`Project_ID`)
    REFERENCES `user-main-app`.`Project` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Project_has_User_User1`
    FOREIGN KEY (`User_ID`)
    REFERENCES `user-main-app`.`User` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `user-main-app`.`User_follows_Project_followedby_User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `user-main-app`.`User_follows_Project_followedby_User` (
  `Project_ID` INT NOT NULL,
  `User_ID` INT NOT NULL,
  `followed_timestamp` DATETIME NULL,
  PRIMARY KEY (`Project_ID`, `User_ID`),
  INDEX `fk_Project_has_User1_User1_idx` (`User_ID` ASC) ,
  INDEX `fk_Project_has_User1_Project1_idx` (`Project_ID` ASC) ,
  CONSTRAINT `fk_Project_has_User1_Project1`
    FOREIGN KEY (`Project_ID`)
    REFERENCES `user-main-app`.`Project` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Project_has_User1_User1`
    FOREIGN KEY (`User_ID`)
    REFERENCES `user-main-app`.`User` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `user-main-app`.`Users_follow_Users_followedby_Users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `user-main-app`.`Users_follow_Users_followedby_Users` (
  `User_ID_follower` INT NOT NULL,
  `User_ID_following` INT NOT NULL,
  PRIMARY KEY (`User_ID_follower`, `User_ID_following`),
  INDEX `fk_User_has_User_User2_idx` (`User_ID_following` ASC) ,
  INDEX `fk_User_has_User_User1_idx` (`User_ID_follower` ASC) ,
  CONSTRAINT `fk_User_has_User_User1`
    FOREIGN KEY (`User_ID_follower`)
    REFERENCES `user-main-app`.`User` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_User_User2`
    FOREIGN KEY (`User_ID_following`)
    REFERENCES `user-main-app`.`User` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `user-main-app`.`Updates`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `user-main-app`.`Updates` (
  `ID` INT NOT NULL,
  `User_ID` INT NOT NULL,
  `Project_ID` INT NOT NULL,
  `title` TEXT NOT NULL,
  `description` TEXT NULL,
  `posted_timestamp` DATETIME NOT NULL,
  PRIMARY KEY (`ID`, `User_ID`, `Project_ID`),
  INDEX `fk_Updates_User_has_Projects_ownedby_Users1_idx` (`User_ID` ASC, `Project_ID` ASC) ,
  CONSTRAINT `fk_Updates_User_has_Projects_ownedby_Users1`
    FOREIGN KEY (`User_ID` , `Project_ID`)
    REFERENCES `user-main-app`.`User_has_Projects_ownedby_Users` (`Project_ID` , `User_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `user-main-app`.`Users_contributeto_Projects_contributedby_Users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `user-main-app`.`Users_contributeto_Projects_contributedby_Users` (
  `Project_ID` INT NOT NULL,
  `User_ID` INT NOT NULL,
  `joinedproject_timpstamp` DATETIME NOT NULL,
  `status` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Project_ID`, `User_ID`),
  INDEX `fk_Project_has_User_User2_idx` (`User_ID` ASC) ,
  INDEX `fk_Project_has_User_Project1_idx` (`Project_ID` ASC) ,
  CONSTRAINT `fk_Project_has_User_Project1`
    FOREIGN KEY (`Project_ID`)
    REFERENCES `user-main-app`.`Project` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Project_has_User_User2`
    FOREIGN KEY (`User_ID`)
    REFERENCES `user-main-app`.`User` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `user-main-app`.`Users_investin_Projects_investedby_Users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `user-main-app`.`Users_investin_Projects_investedby_Users` (
  `Project_ID` INT NOT NULL,
  `User_ID` INT NOT NULL,
  `ID` INT NOT NULL,
  `invested_timestamp` DATETIME NOT NULL,
  `amount` DECIMAL(2) NOT NULL,
  PRIMARY KEY (`Project_ID`, `User_ID`, `ID`),
  INDEX `fk_Project_has_User_User3_idx` (`User_ID` ASC) ,
  INDEX `fk_Project_has_User_Project2_idx` (`Project_ID` ASC) ,
  CONSTRAINT `fk_Project_has_User_Project2`
    FOREIGN KEY (`Project_ID`)
    REFERENCES `user-main-app`.`Project` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Project_has_User_User3`
    FOREIGN KEY (`User_ID`)
    REFERENCES `user-main-app`.`User` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `user-main-app`.`Attachments_Project`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `user-main-app`.`Attachments_Project` (
  `ID` INT NOT NULL,
  `Title` VARCHAR(255) NULL,
  `Project_ID` INT NOT NULL,
  PRIMARY KEY (`ID`, `Project_ID`),
  INDEX `fk_Attachments_Project1_idx` (`Project_ID` ASC) ,
  CONSTRAINT `fk_Attachments_Project1`
    FOREIGN KEY (`Project_ID`)
    REFERENCES `user-main-app`.`Project` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `user-main-app`.`Attachments_Updates`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `user-main-app`.`Attachments_Updates` (
  `ID` INT NOT NULL,
  `TItle` VARCHAR(45) NULL,
  `Updates_ID` INT NOT NULL,
  `Updates_User_ID` INT NOT NULL,
  `Updates_Project_ID` INT NOT NULL,
  PRIMARY KEY (`ID`, `Updates_ID`, `Updates_User_ID`, `Updates_Project_ID`),
  INDEX `fk_Attachments_Updates_Updates1_idx` (`Updates_ID` ASC, `Updates_User_ID` ASC, `Updates_Project_ID` ASC) ,
  CONSTRAINT `fk_Attachments_Updates_Updates1`
    FOREIGN KEY (`Updates_ID` , `Updates_User_ID` , `Updates_Project_ID`)
    REFERENCES `user-main-app`.`Updates` (`ID` , `User_ID` , `Project_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `user-main-app`.`User_reactto_Updates_reactedtoby_Users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `user-main-app`.`User_reactto_Updates_reactedtoby_Users` (
  `Updates_ID` INT NOT NULL,
  `Updates_User_ID` INT NOT NULL,
  `Updates_Project_ID` INT NOT NULL,
  `User_ID` INT NOT NULL,
  `reaction_timestamp` DATETIME NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Updates_ID`, `Updates_User_ID`, `Updates_Project_ID`, `User_ID`),
  INDEX `fk_Updates_has_User_User1_idx` (`User_ID` ASC) ,
  INDEX `fk_Updates_has_User_Updates1_idx` (`Updates_ID` ASC, `Updates_User_ID` ASC, `Updates_Project_ID` ASC) ,
  CONSTRAINT `fk_Updates_has_User_Updates1`
    FOREIGN KEY (`Updates_ID` , `Updates_User_ID` , `Updates_Project_ID`)
    REFERENCES `user-main-app`.`Updates` (`ID` , `User_ID` , `Project_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Updates_has_User_User1`
    FOREIGN KEY (`User_ID`)
    REFERENCES `user-main-app`.`User` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `user-main-app`.`Users_Emphasize_Comments_On_Updates`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `user-main-app`.`Users_Emphasize_Comments_On_Updates` (
  `Updates_ID` INT NOT NULL,
  `Updates_User_ID` INT NOT NULL,
  `Updates_Project_ID` INT NOT NULL,
  `User_ID` INT NOT NULL,
  `comment` VARCHAR(255) NOT NULL,
  `comment_timestamp` DATETIME NOT NULL,
  PRIMARY KEY (`Updates_ID`, `Updates_User_ID`, `Updates_Project_ID`, `User_ID`),
  INDEX `fk_Updates_has_User_User2_idx` (`User_ID` ASC) ,
  INDEX `fk_Updates_has_User_Updates2_idx` (`Updates_ID` ASC, `Updates_User_ID` ASC, `Updates_Project_ID` ASC) ,
  CONSTRAINT `fk_Updates_has_User_Updates2`
    FOREIGN KEY (`Updates_ID` , `Updates_User_ID` , `Updates_Project_ID`)
    REFERENCES `user-main-app`.`Updates` (`ID` , `User_ID` , `Project_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Updates_has_User_User2`
    FOREIGN KEY (`User_ID`)
    REFERENCES `user-main-app`.`User` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `user-main-app`.`Users_commenton_Updated_commentedby_Users_has_User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `user-main-app`.`Users_commenton_Updated_commentedby_Users_has_User` (
  `Updates_ID` INT NOT NULL,
  `Updates_User_ID` INT NOT NULL,
  `Updates_Project_ID` INT NOT NULL,
  `Commenter_User_ID` INT NOT NULL,
  `Emphasizer_User_ID` INT NOT NULL,
  `emphasized_timestamp` DATETIME NOT NULL,
  PRIMARY KEY (`Updates_ID`, `Updates_User_ID`, `Updates_Project_ID`, `Commenter_User_ID`, `Emphasizer_User_ID`),
  INDEX `fk_Users_commenton_Updated_commentedby_Users_has_User_User1_idx` (`Emphasizer_User_ID` ASC) ,
  INDEX `fk_Users_commenton_Updated_commentedby_Users_has_User_Users_idx` (`Updates_ID` ASC, `Updates_User_ID` ASC, `Updates_Project_ID` ASC, `Commenter_User_ID` ASC) ,
  CONSTRAINT `fk_Users_commenton_Updated_commentedby_Users_has_User_Users_c1`
    FOREIGN KEY (`Updates_ID` , `Updates_User_ID` , `Updates_Project_ID` , `Commenter_User_ID`)
    REFERENCES `user-main-app`.`Users_Emphasize_Comments_On_Updates` (`Updates_ID` , `Updates_User_ID` , `Updates_Project_ID` , `User_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Users_commenton_Updated_commentedby_Users_has_User_User1`
    FOREIGN KEY (`Emphasizer_User_ID`)
    REFERENCES `user-main-app`.`User` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `user-main-app`.`Polls`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `user-main-app`.`Polls` (
  `ID` INT NOT NULL,
  `created_timestamp` DATETIME NOT NULL,
  `Project_ID` INT NOT NULL,
  `Project_User_ID` INT NOT NULL,
  `title` VARCHAR(255) NOT NULL,
  `Description` TEXT NULL,
  PRIMARY KEY (`ID`, `Project_ID`, `Project_User_ID`),
  INDEX `fk_Polls_User_has_Projects_ownedby_Users1_idx` (`Project_ID` ASC, `Project_User_ID` ASC) ,
  CONSTRAINT `fk_Polls_User_has_Projects_ownedby_Users1`
    FOREIGN KEY (`Project_ID` , `Project_User_ID`)
    REFERENCES `user-main-app`.`User_has_Projects_ownedby_Users` (`Project_ID` , `User_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `user-main-app`.`Attachments_Polls`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `user-main-app`.`Attachments_Polls` (
  `ID` INT NOT NULL,
  `title` VARCHAR(45) NOT NULL,
  `attachments` BLOB NOT NULL,
  `Polls_ID` INT NOT NULL,
  `Polls_Project_ID` INT NOT NULL,
  `Polls_Project_User_ID` INT NOT NULL,
  PRIMARY KEY (`ID`, `Polls_ID`, `Polls_Project_ID`, `Polls_Project_User_ID`),
  INDEX `fk_Attachments_Polls_Polls1_idx` (`Polls_ID` ASC, `Polls_Project_ID` ASC, `Polls_Project_User_ID` ASC) ,
  CONSTRAINT `fk_Attachments_Polls_Polls1`
    FOREIGN KEY (`Polls_ID` , `Polls_Project_ID` , `Polls_Project_User_ID`)
    REFERENCES `user-main-app`.`Polls` (`ID` , `Project_ID` , `Project_User_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `user-main-app`.`Poll_Options`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `user-main-app`.`Poll_Options` (
  `ID` INT NOT NULL,
  `Option` VARCHAR(45) NOT NULL,
  `Polls_ID` INT NOT NULL,
  `Project_ID` INT NOT NULL,
  `Project_User_ID` INT NOT NULL,
  PRIMARY KEY (`ID`, `Polls_ID`, `Project_ID`, `Project_User_ID`),
  INDEX `fk_Poll_Options_Polls1_idx` (`Polls_ID` ASC, `Project_ID` ASC, `Project_User_ID` ASC) ,
  CONSTRAINT `fk_Poll_Options_Polls1`
    FOREIGN KEY (`Polls_ID` , `Project_ID` , `Project_User_ID`)
    REFERENCES `user-main-app`.`Polls` (`ID` , `Project_ID` , `Project_User_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `user-main-app`.`User_selects_PollOption_Selectedby_User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `user-main-app`.`User_selects_PollOption_Selectedby_User` (
  `Poll_Options_ID` INT NOT NULL,
  `Poll_ID` INT NOT NULL,
  `Poll_Project_ID` INT NOT NULL,
  `Poll_Project_User_ID` INT NOT NULL,
  `Voter_User_ID` INT NOT NULL,
  `voted_timestamp` DATETIME NOT NULL,
  PRIMARY KEY (`Poll_Options_ID`, `Poll_ID`, `Poll_Project_ID`, `Poll_Project_User_ID`, `Voter_User_ID`),
  INDEX `fk_Poll_Options_has_User_User1_idx` (`Voter_User_ID` ASC) ,
  INDEX `fk_Poll_Options_has_User_Poll_Options1_idx` (`Poll_Options_ID` ASC, `Poll_ID` ASC, `Poll_Project_ID` ASC, `Poll_Project_User_ID` ASC) ,
  CONSTRAINT `fk_Poll_Options_has_User_Poll_Options1`
    FOREIGN KEY (`Poll_Options_ID` , `Poll_ID` , `Poll_Project_ID` , `Poll_Project_User_ID`)
    REFERENCES `user-main-app`.`Poll_Options` (`ID` , `Polls_ID` , `Project_ID` , `Project_User_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Poll_Options_has_User_User1`
    FOREIGN KEY (`Voter_User_ID`)
    REFERENCES `user-main-app`.`User` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
